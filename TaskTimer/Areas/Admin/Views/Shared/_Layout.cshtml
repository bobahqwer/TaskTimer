@using MvcSiteMapProvider.Web.Html
@using MvcSiteMapProvider.Web.Html.Models
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>@ViewBag.Title</title>
    @Styles.Render(
        "~/Areas/Admin/Content/css",
        "~/Content/themes/base/jquery.ui.all.css",
        "~/Scripts/tablesorter/css")
    @Scripts.Render("~/bundles/modernizr",
        "~/Scripts/jquery-1.6.2.js",
        "~/Scripts/jquery-ui-1.8.11.js",
        "~/Scripts/jquery.unobtrusive-ajax.js",
        "~/Scripts/jquery.validate.js",
        "~/Scripts/jquery.validate.unobtrusive.js",
        "~/Scripts/tablesorter/js")

    <script>
        $(function () {
                // call the tablesorter plugin and apply the uitheme widget
            $("#myTable").tablesorter({
                theme: "bootstrap", // this will 

                widthFixed: true,

                headerTemplate: '{content} {icon}', // new in v2.7. Needed to add the bootstrap icon!

                // widget code contained in the jquery.tablesorter.widgets.js file
                // use the zebra stripe widget if you plan on hiding any rows (filter widget)
                widgets: ["uitheme", "filter", "zebra"],

                widgetOptions: {
                    // using the default zebra striping class name, so it actually isn't included in the theme variable above
                    // this is ONLY needed for bootstrap theming if you are using the filter widget, because rows are hidden
                    zebra: ["even", "odd"],

                    // reset filters button
                    filter_reset: ".reset",

                    // set the uitheme widget to use the bootstrap theme class names
                    // uitheme : "bootstrap"

                }
            });
                /*.tablesorterPager({
        
                    // target the pager markup - see the HTML block below
                    container: $(".pager"),
        
                    // target the pager page select dropdown - choose a page
                    cssGoto: ".pagenum",
        
                    // remove rows from the table to speed up the sort of large tables.
                    // setting this to false, only hides the non-visible rows; needed if you plan to add/remove rows with the pager enabled.
                    removeRows: false,
        
                    // output string - default is '{page}/{totalPages}';
                    // possible variables: {page}, {totalPages}, {filteredPages}, {startRow}, {endRow}, {filteredRows} and {totalRows}
                    output: '{startRow} - {endRow} / {filteredRows} ({totalRows})'
        
                });*/

            $.extend($.tablesorter.themes.bootstrap, {
                // these classes are added to the table. To see other table classes available,
                // look here: http://twitter.github.com/bootstrap/base-css.html#tables
                table: 'table table-bordered table-hover',
                header: 'bootstrap-header', // give the header a gradient background
                footerRow: '',
                footerCells: '',
                icons: '', // add "icon-white" to make them white; this icon class is added to the <i> in the header
                sortNone: 'bootstrap-icon-unsorted',
                sortAsc: 'icon-chevron-up',
                sortDesc: 'icon-chevron-down',
                active: '', // applied when column is sorted
                hover: '', // use custom css here - bootstrap class may not override it
                filterRow: '', // filter row class
                even: '', // odd row zebra striping
                odd: ''  // even row zebra striping
            });
        });
    </script>

</head>
<body>
    <div class="body">
        <header>
            <div>
                <h2>Admin panel</h2>
                <div class="userinfo float-left">
                    @{var userRoles = Roles.GetRolesForUser(User.Identity.Name); bool isFirst = true;}
                    <span>User name: @User.Identity.Name</span>
                    <span>User roles: @foreach (var role in userRoles)
                                      {
                                          if (isFirst)
                                          {
                                        
                                          @role
                                          }
                                          else
                                          { 
                                            @Html.Raw(", &nbsp") 
                                            @role
                                          }
                                          isFirst = false;
                                      }
                        @if (userRoles.Length == 0)
                        {
                            @Html.Raw("none")
                        }
                    </span>
                    <span>User IP: @Request.UserHostAddress</span>
                    <span>User Host Name: @Request.UserHostName</span>
                    <span>User Languages:  @foreach (var language in Request.UserLanguages)
                                           {
                        @language 
                        @Html.Raw(", &nbsp")
                                           }
                    </span>
                    <span>User Agent: @Request.UserAgent</span>
                </div>
                <div class="datetime float-right">
                    @Html.ActionLink("Exit", "Index", "Home", new { area = "" }, null)
                </div>
            </div>
            @*http://nettuts.s3.amazonaws.com/819_megamenu/demo/index.html*@
<ul class="menu">
    <li class="menuTopItem">
        <div class="menuDrop">Pages</div>
        <div class="menuBottomItems">
            <div class="menuBottomItem">
                @Html.ActionLink("Site main pages", "SitePages", "AdminHome")
            </div>
            <div class="menuBottomItem">
                @Html.ActionLink("Add new site page", "SitePagesAddNew", "AdminHome", new { id = -1 }, null)
            </div>
        </div>
    </li>
    <li class="menuTopItem">
        <div class="menuDrop">Shop</div>
        <div class="menuBottomItems">
            <div class="menuBottomItem">
                @Html.ActionLink("Shop pages", "SitePages")
            </div>
        </div>
    </li>
    <li class="menuTopItem">
        <div class="menuDrop">Gallery</div>
        <div class="menuBottomItems">
            <div class="menuBottomItem">
                @Html.ActionLink("Gallery pages", "GalleryPages", "AdminGallery")
            </div>
            <div class="menuBottomItem">
                @Html.ActionLink("Add new gallery page", "GalleryPagesAddNew", "AdminGallery", new { id = -1 }, null)
            </div>
            <div class="menuBottomItem">
                @Html.ActionLink("Gallery slider pages", "GalleryPages", "AdminGallery")
            </div>
            <div class="menuBottomItem">
                @Html.ActionLink("Add new gallery slider page", "GalleryPagesAddNew", "AdminGallery", new { id = -1 }, null)
            </div>
        </div>
    </li>
    <li class="menuTopItem">
        <div class="menuDrop">Templates</div>
        <div class="menuBottomItems">
            <div class="menuBottomItem">
                @Html.ActionLink("Template pages", "SitePages")
            </div>
            <div class="menuBottomItem">
                @Html.ActionLink("Add new template page", "GalleryPagesAddNew", "AdminGallery", new { id = -1 }, null)
            </div>
        </div>
    </li>
</ul>
        </header>
        <div id="body">
            @*@Html.MvcSiteMap("AdminMvcSiteMapProvider").Menu(false, true, true)*@
            @RenderBody()
        </div>
        <footer></footer>
    </div>
</body>
</html>
